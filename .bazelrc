# build --cxxopt='-std=c++20'
build --action_env=CC=gcc-11
build --action_env=CXX=g++-11
build --action_env=CPP=cpp-11
build --action_env=BAZEL_CXXOPTS=-std=c++11
# build --action_env=CC=clang-15
# build --action_env=CXX=clang++-15

# Use toolchain resolution to find the cc toolchain.
# build --platforms=//external/platforms:x86_64-linux-platform

# Use toolchain resolution to find the cc toolchain.
build --incompatible_enable_cc_toolchain_resolution

# Show executed commands for debuggability.
build --subcommands

# Show the full set of flags for observability and debuggability.
common --announce_rc


# Legacy toolchain resolution

# Use our custom-configured c++ toolchain.
build:clang_config --crosstool_top=//external/platforms:clang-suite

# Use --cpu as a differentiator.
build:clang_config --cpu=k8

# Use the default Bazel C++ toolchain to build the tools used during the
# build.
build:clang_config --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
