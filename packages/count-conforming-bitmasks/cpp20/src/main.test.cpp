// Hey Emacs, this is -*- coding: utf-8 -*-

#include "main.hpp"

#define BOOST_TEST_MODULE CountConformingBitmasks
#include <boost/test/unit_test.hpp>

// NOLINTNEXTLINE
BOOST_AUTO_TEST_CASE(count_conforming_bitmasks) {
  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'1111'1111'1111'1111'1001'1110,
          0b11'1111'1111'1111'1111'1111'0011'1110,
          0b11'1111'1111'1111'1111'1111'0110'1110),
      16);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'1111'1111'1111'1111'1001'1111,
          0b11'1111'1111'1111'1111'1111'0011'1111,
          0b11'1111'1111'1111'1111'1111'0110'1111),
      8);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'1111'1111'1111'1011'1001'1111,
          0b11'1111'1111'1111'1101'1001'0011'1111,
          0b11'1111'1111'1111'1111'1111'0110'1111),
      38);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'1111'1111'1111'1111'1111'1111,
          0b11'1111'1111'1111'1111'1111'1111'1111,
          0b11'1111'1111'1111'1111'1111'1111'1111),
      1);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'1111'1111'1111'1111'1111'1101,
          0b11'1111'1111'1111'1111'1111'1111'1101,
          0b11'1111'1111'1111'1111'1111'1111'1101),
      2);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b00'0000'0000'0000'0000'0000'0000'0000,
          0b00'0000'0000'0000'0000'0000'0000'0000,
          0b00'0000'0000'0000'0000'0000'0000'0000),
      1'073'741'824);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'0000'0000'0000'0000'0011'1111,
          0b11'1111'0000'0000'0000'0000'0011'1111,
          0b11'1111'0000'0000'0000'0000'0011'1111),
      262'144);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'1111'0000'0000'0000'0000'0000,
          0b11'1111'1111'0000'0000'0000'0000'0000,
          0b11'1111'1111'0000'0000'0000'0000'0000),
      1'048'576);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b11'1111'1000'0000'0000'0000'0000'0000,
          0b11'1111'1000'0000'0000'0000'0000'0000,
          0b11'1111'1000'0000'0000'0000'0000'0000),
      8'388'608);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b10'1010'1010'1010'1010'1010'1010'1010,
          0b01'0101'0101'0101'0101'0101'0101'0101,
          0b10'1010'1010'1010'1010'1010'1010'1010),
      65'535);

  BOOST_REQUIRE_EQUAL(
      solution(
          0b10'1010'1010'1010'1010'1010'1010'1010,
          0b01'0101'0101'0101'0101'0101'0101'0100,
          0b10'1010'1010'1010'1010'1010'1010'1010),
      98'302);

  // BOOST_REQUIRE_EQUAL(
  //     solution(
  //         0b10'1010'1010'1010'1010'1010'1010'1010,
  //         0b01'0101'0101'0101'1010'1010'1010'1010,
  //         0b10'1010'1010'1010'1010'1010'1010'1010),
  //     65'532);

  // BOOST_REQUIRE_EQUAL(
  //     solution(
  //         0b11'1111'0000'0000'0000'0000'0000'0000,
  //         0b11'1111'0000'0000'0000'0000'0000'0000,
  //         0b11'1111'0000'0000'0000'0000'0000'0000),
  //     50'331'648);
}
