# Hey Emacs, this is -*- coding: utf-8; mode: bazel -*-

package(default_visibility = ["//visibility:public"])

load("@aspect_build_bazel_lib//lib:run_binary.bzl", "run_binary")
load("@rules_cc//cc:defs.bzl", "cc_library")

load(
  ":file_lists.bzl",
  "staticLibsTest",
  "sharedLibsTest",
  "staticLibs",
  "sharedLibs",
)

version = (1, 80, 0)

versionDots = "{}.{}.{}".format(version[0], version[1], version[2])
versionDash = "{}_{}".format(version[0], version[1])

filegroup(
  name = "all-srcs",
  srcs = glob([".rh-subproject/*", "package/**"]),
)

run_binary(
  name = "boost-build",
  mnemonic = "BoostBuild",
  srcs = [":all-srcs"],
  out_dirs = ["package", "dist", "build"],
  tool = ".rh-subproject/boost-build.sh",
  env = {"RULEDIR": "$(RULEDIR)"},
  execution_requirements = { "exclusive": "1" },
)

# cc_library(
#   name = "boost",
#   hdrs = glob(["bazel-bin/external/boost/dist/include/boost-1_80/boost/**"]),
#   # includes = ['package/boost'],
#   # srcs = [":boost-build"],
#   # deps = [":boost-build"],
#   srcs =
#     ["bazel-bin/external/boost/dist/lib/" + lib for lib in staticLibs] +
#     ["bazel-bin/external/boost/dist/lib/" + lib for lib in sharedLibs],
# )

# cc_library(
#   name = "boost-test",
#   # hdrs = glob(["package/boost/**"]),
#   includes = ['package/boost'],
#   strip_include_prefix = "package/",
#   srcs =
#     ["dist/lib/" + lib for lib in staticLibsTest] +
#     ["dist/lib/" + lib for lib in sharedLibsTest],
# )
