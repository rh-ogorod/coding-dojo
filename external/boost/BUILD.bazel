# Hey Emacs, this is -*- coding: utf-8; mode: bazel -*-

load("@aspect_build_bazel_lib//lib:run_binary.bzl", "run_binary")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@bazel_rules_cc//:alien_cc_library.bzl", "alien_cc_library")

version = (1, 80, 0)

versionDots = "{}.{}.{}".format(version[0], version[1], version[2])
versionDash = "{}_{}".format(version[0], version[1])

staticLibsTest = (
  "libboost_prg_exec_monitor-gcc11-mt-x64-1_80.a",
  "libboost_test_exec_monitor-gcc11-mt-x64-1_80.a",
  "libboost_unit_test_framework-gcc11-mt-x64-1_80.a",
)

sharedLibsTest = (
  "libboost_prg_exec_monitor-gcc11-mt-x64-1_80.so",
  "libboost_prg_exec_monitor-gcc11-mt-x64-1_80.so.1.80.0",
  "libboost_unit_test_framework-gcc11-mt-x64-1_80.so",
  "libboost_unit_test_framework-gcc11-mt-x64-1_80.so.1.80.0",
)

staticLibs = (
  "libboost_system-gcc11-mt-x64-1_80.a",
)

sharedLibs = (
  "libboost_system-gcc11-mt-x64-1_80.so",
  "libboost_system-gcc11-mt-x64-1_80.so.1.80.0",
)

filegroup(
  name = "all-srcs",
  srcs = glob([".rh-subproject/*", "package/**"]),
)

run_binary(
  name = "bazel-build",
  mnemonic = "BoostBuild",
  srcs = [":all-srcs"],
  out_dirs = ["package", "dist", "build"],
  tool = ".rh-subproject/bazel-build.sh",
  env = {"RULEDIR": "$(RULEDIR)"},
  execution_requirements = { "exclusive": "1" },
  visibility = ["//visibility:public"],
)

alien_cc_library(
  name = "alien-boost",
  dep_gen = ":bazel-build",
)

cc_library(
  name = "boost",
  hdrs = glob(["package/boost/**"]),
  strip_include_prefix = "package/",
  srcs =
    ["dist/lib/" + lib for lib in staticLibs] +
    ["dist/lib/" + lib for lib in sharedLibs],
  implementation_deps = [":bazel-build"],
  visibility = ["//visibility:public"],
)

cc_library(
  name = "boost-test",
  hdrs = glob(["package/boost/**"]),
  strip_include_prefix = "package/",
  srcs =
    ["dist/lib/" + lib for lib in staticLibsTest] +
    ["dist/lib/" + lib for lib in sharedLibsTest],
  visibility = ["//visibility:public"],
)
